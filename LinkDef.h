#ifdef __CINT__
#pragma link off all globals;
#pragma link off all classes;
#pragma link off all functions;
#pragma link C++ nestedclass;
#pragma link C++ class myVertex+;
#pragma link C++ class vector<myVertex>;
#pragma link C++ class vector<myVertex>::iterator;
#pragma link C++ function operator==(const vector<myVertex>::iterator&,const vector<myVertex>::iterator&); 
#pragma link C++ function operator!=(const vector<myVertex>::iterator&,const vector<myVertex>::iterator&); 
#pragma link C++ function operator<=(const vector<myVertex>::iterator&,const vector<myVertex>::iterator&); 
#pragma link C++ function operator>=(const vector<myVertex>::iterator&,const vector<myVertex>::iterator&); 
#pragma link C++ function operator<(const vector<myVertex>::iterator&,const vector<myVertex>::iterator&); 
#pragma link C++ function operator>(const vector<myVertex>::iterator&,const vector<myVertex>::iterator&); 
#pragma link C++ function operator-(const vector<myVertex>::iterator&,const vector<myVertex>::iterator&); 
#pragma link C++ function operator+(const vector<myVertex>::iterator::difference_type,const vector<myVertex>::iterator&); 
#pragma link C++ class myTriggerObject+;
#pragma link C++ class vector<myTriggerObject>;
#pragma link C++ class vector<myTriggerObject>::iterator;
#pragma link C++ function operator==(const vector<myTriggerObject>::iterator&,const vector<myTriggerObject>::iterator&); 
#pragma link C++ function operator!=(const vector<myTriggerObject>::iterator&,const vector<myTriggerObject>::iterator&); 
#pragma link C++ function operator<=(const vector<myTriggerObject>::iterator&,const vector<myTriggerObject>::iterator&); 
#pragma link C++ function operator>=(const vector<myTriggerObject>::iterator&,const vector<myTriggerObject>::iterator&); 
#pragma link C++ function operator<(const vector<myTriggerObject>::iterator&,const vector<myTriggerObject>::iterator&); 
#pragma link C++ function operator>(const vector<myTriggerObject>::iterator&,const vector<myTriggerObject>::iterator&); 
#pragma link C++ function operator-(const vector<myTriggerObject>::iterator&,const vector<myTriggerObject>::iterator&); 
#pragma link C++ function operator+(const vector<myTriggerObject>::iterator::difference_type,const vector<myTriggerObject>::iterator&); 
#pragma link C++ class myGenObject+;
#pragma link C++ class vector<myGenObject>;
#pragma link C++ class vector<myGenObject>::iterator;
#pragma link C++ function operator==(const vector<myGenObject>::iterator&,const vector<myGenObject>::iterator&); 
#pragma link C++ function operator!=(const vector<myGenObject>::iterator&,const vector<myGenObject>::iterator&); 
#pragma link C++ function operator<=(const vector<myGenObject>::iterator&,const vector<myGenObject>::iterator&); 
#pragma link C++ function operator>=(const vector<myGenObject>::iterator&,const vector<myGenObject>::iterator&); 
#pragma link C++ function operator<(const vector<myGenObject>::iterator&,const vector<myGenObject>::iterator&); 
#pragma link C++ function operator>(const vector<myGenObject>::iterator&,const vector<myGenObject>::iterator&); 
#pragma link C++ function operator-(const vector<myGenObject>::iterator&,const vector<myGenObject>::iterator&); 
#pragma link C++ function operator+(const vector<myGenObject>::iterator::difference_type,const vector<myGenObject>::iterator&);
#pragma link C++ class myElectron+;
#pragma link C++ class vector<myElectron>;
#pragma link C++ class vector<myElectron>::iterator;
#pragma link C++ function operator==(const vector<myElectron>::iterator&,const vector<myElectron>::iterator&); 
#pragma link C++ function operator!=(const vector<myElectron>::iterator&,const vector<myElectron>::iterator&); 
#pragma link C++ function operator<=(const vector<myElectron>::iterator&,const vector<myElectron>::iterator&); 
#pragma link C++ function operator>=(const vector<myElectron>::iterator&,const vector<myElectron>::iterator&); 
#pragma link C++ function operator<(const vector<myElectron>::iterator&,const vector<myElectron>::iterator&); 
#pragma link C++ function operator>(const vector<myElectron>::iterator&,const vector<myElectron>::iterator&); 
#pragma link C++ function operator-(const vector<myElectron>::iterator&,const vector<myElectron>::iterator&); 
#pragma link C++ function operator+(const vector<myElectron>::iterator::difference_type,const vector<myElectron>::iterator&);
#pragma link C++ class myTau+;
#pragma link C++ class vector<myTau>;
#pragma link C++ class vector<myTau>::iterator;
#pragma link C++ function operator==(const vector<myTau>::iterator&,const vector<myTau>::iterator&); 
#pragma link C++ function operator!=(const vector<myTau>::iterator&,const vector<myTau>::iterator&); 
#pragma link C++ function operator<=(const vector<myTau>::iterator&,const vector<myTau>::iterator&); 
#pragma link C++ function operator>=(const vector<myTau>::iterator&,const vector<myTau>::iterator&); 
#pragma link C++ function operator<(const vector<myTau>::iterator&,const vector<myTau>::iterator&); 
#pragma link C++ function operator>(const vector<myTau>::iterator&,const vector<myTau>::iterator&); 
#pragma link C++ function operator-(const vector<myTau>::iterator&,const vector<myTau>::iterator&); 
#pragma link C++ function operator+(const vector<myTau>::iterator::difference_type,const vector<myTau>::iterator&);
#pragma link C++ class myMuon+;
#pragma link C++ class vector<myMuon>;
#pragma link C++ class vector<myMuon>::iterator;
#pragma link C++ function operator==(const vector<myMuon>::iterator&,const vector<myMuon>::iterator&); 
#pragma link C++ function operator!=(const vector<myMuon>::iterator&,const vector<myMuon>::iterator&); 
#pragma link C++ function operator<=(const vector<myMuon>::iterator&,const vector<myMuon>::iterator&); 
#pragma link C++ function operator>=(const vector<myMuon>::iterator&,const vector<myMuon>::iterator&); 
#pragma link C++ function operator<(const vector<myMuon>::iterator&,const vector<myMuon>::iterator&); 
#pragma link C++ function operator>(const vector<myMuon>::iterator&,const vector<myMuon>::iterator&); 
#pragma link C++ function operator-(const vector<myMuon>::iterator&,const vector<myMuon>::iterator&); 
#pragma link C++ function operator+(const vector<myMuon>::iterator::difference_type,const vector<myMuon>::iterator&);
#pragma link C++ class myJet+;
#pragma link C++ class vector<myJet>;
#pragma link C++ class vector<myJet>::iterator;
#pragma link C++ function operator==(const vector<myJet>::iterator&,const vector<myJet>::iterator&); 
#pragma link C++ function operator!=(const vector<myJet>::iterator&,const vector<myJet>::iterator&); 
#pragma link C++ function operator<=(const vector<myJet>::iterator&,const vector<myJet>::iterator&); 
#pragma link C++ function operator>=(const vector<myJet>::iterator&,const vector<myJet>::iterator&); 
#pragma link C++ function operator<(const vector<myJet>::iterator&,const vector<myJet>::iterator&); 
#pragma link C++ function operator>(const vector<myJet>::iterator&,const vector<myJet>::iterator&); 
#pragma link C++ function operator-(const vector<myJet>::iterator&,const vector<myJet>::iterator&); 
#pragma link C++ function operator+(const vector<myJet>::iterator::difference_type,const vector<myJet>::iterator&);
#pragma link C++ class myMET+;
#pragma link C++ class vector<myMET>;
#pragma link C++ class vector<myMET>::iterator;
#pragma link C++ function operator==(const vector<myMET>::iterator&,const vector<myMET>::iterator&); 
#pragma link C++ function operator!=(const vector<myMET>::iterator&,const vector<myMET>::iterator&); 
#pragma link C++ function operator<=(const vector<myMET>::iterator&,const vector<myMET>::iterator&); 
#pragma link C++ function operator>=(const vector<myMET>::iterator&,const vector<myMET>::iterator&); 
#pragma link C++ function operator<(const vector<myMET>::iterator&,const vector<myMET>::iterator&); 
#pragma link C++ function operator>(const vector<myMET>::iterator&,const vector<myMET>::iterator&); 
#pragma link C++ function operator-(const vector<myMET>::iterator&,const vector<myMET>::iterator&); 
#pragma link C++ function operator+(const vector<myMET>::iterator::difference_type,const vector<myMET>::iterator&);
#pragma link C++ class mySV+;
#pragma link C++ class vector<mySV>;
#pragma link C++ class vector<mySV>::iterator;
#pragma link C++ function operator==(const vector<mySV>::iterator&,const vector<mySV>::iterator&); 
#pragma link C++ function operator!=(const vector<mySV>::iterator&,const vector<mySV>::iterator&); 
#pragma link C++ function operator<=(const vector<mySV>::iterator&,const vector<mySV>::iterator&); 
#pragma link C++ function operator>=(const vector<mySV>::iterator&,const vector<mySV>::iterator&); 
#pragma link C++ function operator<(const vector<mySV>::iterator&,const vector<mySV>::iterator&); 
#pragma link C++ function operator>(const vector<mySV>::iterator&,const vector<mySV>::iterator&); 
#pragma link C++ function operator-(const vector<mySV>::iterator&,const vector<mySV>::iterator&); 
#pragma link C++ function operator+(const vector<mySV>::iterator::difference_type,const vector<mySV>::iterator&);
#pragma link C++ class myevent+;
#endif


